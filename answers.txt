1. client.c tries to create a socket with domain AF_INET, TCP communication and its protocol. The socket is referred to using its descriptor (unique name, integer). If we manage to create the socket, we initialise the
endpoint (socket address) to which the socket is supposed to connect (IP address/host and IP port) from received command line arguments (inet_addr converts the IP address in the standard IPv4 to a integer value to be 
used as Internet address and htons from host order to network order). Then, if the socket manages to connect to the endpoint, we keep reading from the socket and outputing to stdout until the other side has closed the communication (0
means EOF).
  server.c creates a socket address that can be bound to any available interface at the port given as command line argument with domain AF_INET. The socket handle referred to by descriptor listenfd is a passive socket
that will be used to accept incoming connections. The size of the queue of pending connections is defined by the macro MAXOPEN. Then, we loop infinitely, accept() extracts the first connection request on the queue of pending
connections for the listening socket and creates a new connected socket referred to by the descriptor connfd. If no error occurs in this process, we read the content of the file provided as the second line argument and
send it through the connected socket. Then, it returns the file position to the beginning of the file so that we can do the same for the next connected socket.

2. client.c should return 0 not 1 if everything is okay; the for loop in server.c is not closed 
correctly; fopen either returns a pointer to a FILE object or NULL, not 0; in server1.c argc 
should be 3 not 2 as the first argument is the program
